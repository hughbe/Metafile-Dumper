using MetafileDumper.Emf.Records;
using System;
using System.Diagnostics;
using System.Linq;
using System.Text;

namespace MetafileDumper
{
    class Program
    {
        private static void Indent(StringBuilder builder)
        {
            builder.Insert(0, "		");
            builder.Replace(Environment.NewLine, Environment.NewLine + "        ");
        }

        [STAThread]
        static void Main(string[] args)
        {
            byte[] data = new byte[]
            {
0x01, 0x00, 0x00, 0x00, 0x6C, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x56, 0x0A, 0x00, 0x00, 0xA9, 0x14, 0x00, 0x00, 0x3D, 0x29, 0x00, 0x00, 0xE0, 0x3D, 0x00, 0x00, 0x20, 0x45, 0x4D, 0x46, 0x00, 0x00, 0x01, 0x00, 0x8C, 0x02, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x05, 0x00, 0x00, 0x84, 0x03, 0x00, 0x00, 0x7D, 0x01, 0x00, 0x00, 0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0xD0, 0x05, 0x00, 0x2D, 0xA2, 0x03, 0x00, 0x46, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x45, 0x4D, 0x46, 0x2B, 0x01, 0x40, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x10, 0xC0, 0xDB, 0x01, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0x34, 0x01, 0x00, 0x00, 0x45, 0x4D, 0x46, 0x2B, 0x08, 0x40, 0x00, 0x06, 0x40, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x02, 0x10, 0xC0, 0xDB, 0x00, 0x00, 0x20, 0x41, 0x04, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x43, 0x00, 0x4F, 0x00, 0x44, 0x00, 0x45, 0x00, 0x20, 0x00, 0x4E, 0x00, 0x45, 0x00, 0x57, 0x00, 0x20, 0x00, 0x52, 0x00, 0x4F, 0x00, 0x4D, 0x00, 0x41, 0x00, 0x4E, 0x00, 0x1C, 0x40, 0x00, 0x80, 0x58, 0x00, 0x00, 0x00, 0x4C, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x80, 0x40, 0x48, 0x00, 0x65, 0x00, 0x6C, 0x00, 0x6C, 0x00, 0x6F, 0x00, 0x20, 0x00, 0x57, 0x00, 0x6F, 0x00, 0x72, 0x00, 0x6C, 0x00, 0x64, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x08, 0x40, 0x01, 0x07, 0x48, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x02, 0x10, 0xC0, 0xDB, 0x0A, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x7F, 0xF4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAB, 0xAA, 0x2A, 0x3E, 0xAB, 0xAA, 0x2A, 0x3E, 0x0A, 0xD7, 0x83, 0x3F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x40, 0x02, 0x01, 0x20, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x02, 0x10, 0xC0, 0xDB, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x1C, 0x40, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40, 0x40, 0x00, 0x00, 0x80, 0x40, 0x48, 0x00, 0x65, 0x00, 0x6C, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4C, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x29, 0x00, 0xAA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x46, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x45, 0x4D, 0x46, 0x2B, 0x02, 0x40, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00

            };
            var records = MetafileEnumerator.Enumerate(data).ToArray();
            var commentRecords = records.OfType<EmrCommentEmfPlus>().ToArray();

            var builder = new StringBuilder();
            /*
            if (commentRecords.Length == 1)
            {
                commentRecords[0].WriteTo(builder);
            }
            else
            {
                commentRecords[1].WriteTo(builder);
            }*/
            foreach (var record in records.Skip(2).Take(5))
            {
                record.WriteTo(builder);
                builder.AppendLine();
            }

            Indent(builder);

            string result = builder.ToString().TrimEnd().TrimEnd(',');
            Debug.WriteLine(result);
        }
    }
}
